version: '3'
services:
  nginx:
    build: ./nginx/
    ports:
      - "443:443"
    image: nginx
    volumes:
      - static:/static/
      - /opt/ssl:/ssl
    restart: on-failure
    depends_on:
      - api
    logging:
      driver: "json-file"
      options:
        max-size: "50m"

  api_db:
    image: postgres
    volumes:
      - db:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: '${DB_NAME}'
      POSTGRES_USER: '${DB_USER}'
      POSTGRES_PASSWORD: '${DB_PASSWORD}'
    ports:
      - "5432:5432"
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "50m"

  api:
    image: api
    build: ./api/
    volumes:
      - static:/static/
      - media:/app/media/
    environment:
      DB_HOST: '${DB_HOST}'
      DB_PASSWORD: '${DB_PASSWORD}'
      DB_USER: '${DB_USER}'
      DB_NAME: '${DB_NAME}'
      SECRET_KEY: '${SECRET_KEY}'
    restart: on-failure
    depends_on:
      - api_db
    command: "/bin/sh ./entrypoint_api.sh"
    logging:
      driver: "json-file"
      options:
        max-size: "50m"

  purchase_indexer:
    image: api
    build: ./api/
    environment:
      DB_HOST: '${DB_HOST}'
      DB_PASSWORD: '${DB_PASSWORD}'
      DB_USER: '${DB_USER}'
      DB_NAME: '${DB_NAME}'
      SECRET_KEY: '${SECRET_KEY}'
      INDEXER_INTERVAL: 1
    restart: on-failure
    depends_on:
      - api
    command: "/bin/sh ./entrypoint_purchase_indexer.sh"
    logging:
      driver: "json-file"
      options:
        max-size: "50m"

  price_indexer:
    image: api
    build: ./api/
    environment:
      DB_HOST: '${DB_HOST}'
      DB_PASSWORD: '${DB_PASSWORD}'
      DB_USER: '${DB_USER}'
      DB_NAME: '${DB_NAME}'
      SECRET_KEY: '${SECRET_KEY}'
      INDEXER_INTERVAL: 1
    restart: on-failure
    depends_on:
      - api
    command: "/bin/sh ./entrypoint_price_indexer.sh"
    logging:
      driver: "json-file"
      options:
        max-size: "50m"

  mint_controller:
    image: api
    build: ./api/
    environment:
      DB_HOST: '${DB_HOST}'
      DB_PASSWORD: '${DB_PASSWORD}'
      DB_USER: '${DB_USER}'
      DB_NAME: '${DB_NAME}'
      SECRET_KEY: '${SECRET_KEY}'
      INDEXER_INTERVAL: 1
      MINTER_PRIVATE_KEY: '${MINTER_PRIVATE_KEY}'
      NFT_CONTRACT_ADDRESS: '${NFT_CONTRACT_ADDRESS}'
      MAIN_NFT_CHAIN_ID: '${MAIN_NFT_CHAIN_ID}'
    restart: on-failure
    depends_on:
      - api
    command: "/bin/sh ./entrypoint_mint_controller.sh"
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
  
  valleys_indexer:
    image: api
    build: ./api/
    environment:
      DB_HOST: '${DB_HOST}'
      DB_PASSWORD: '${DB_PASSWORD}'
      DB_USER: '${DB_USER}'
      DB_NAME: '${DB_NAME}'
      SECRET_KEY: '${SECRET_KEY}'
      INDEXER_INTERVAL: 1
    restart: on-failure
    depends_on:
      - api
    command: "/bin/sh ./entrypoint_valleys_indexer.sh"
    logging:
      driver: "json-file"
      options:
        max-size: "50m"

  optimism_bridge_service:
    image: optimism_bridge
    build: ./optimism-bridge
    environment:
      RPC_URL_L1: '${RPC_URL_L1}'
      RPC_URL_L2: '${RPC_URL_L2}'
      BRIDGE_PRIVATE_KEY: '${BRIDGE_PRIVATE_KEY}'
      TOKEN_ADDRESS_L1: '${TOKEN_ADDRESS_L1}'
      TOKEN_ADDRESS_L2: '${TOKEN_ADDRESS_L2}'
      CHAIN_ID_L1: '${CHAIN_ID_L1}'
      CHAIN_ID_L2: '${CHAIN_ID_L2}'
      MONGO_URL: '${MONGO_URL}'
    command: "node bridge.js"
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "50m"

  optimism_bridge_api:
    image: optimism_bridge
    build: ./optimism-bridge
    environment:
      RPC_URL_L1: '${RPC_URL_L1}'
      RPC_URL_L2: '${RPC_URL_L2}'
      BRIDGE_PRIVATE_KEY: '${BRIDGE_PRIVATE_KEY}'
      TOKEN_ADDRESS_L1: '${TOKEN_ADDRESS_L1}'
      TOKEN_ADDRESS_L2: '${TOKEN_ADDRESS_L2}'
      CHAIN_ID_L1: '${CHAIN_ID_L1}'
      CHAIN_ID_L2: '${CHAIN_ID_L2}'
      MONGO_URL: '${MONGO_URL}'
    command: "node api.js"
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "50m"

  gnosis_bridge_service:
    image: api
    build: ./api/
    environment:
      DB_HOST: '${DB_HOST}'
      DB_PASSWORD: '${DB_PASSWORD}'
      DB_USER: '${DB_USER}'
      DB_NAME: '${DB_NAME}'
      SECRET_KEY: '${SECRET_KEY}'
      INDEXER_INTERVAL: 1
      GNOSIS_BRIDGE_PRIVATE_KEY: '${GNOSIS_BRIDGE_PRIVATE_KEY}'
      GNOSIS_CHAIN_ID: '${GNOSIS_CHAIN_ID}'
      ETHEREUM_CHAIN_ID: '${ETHEREUM_CHAIN_ID}'
    restart: on-failure
    depends_on:
      - api
    command: "/bin/sh ./entrypoint_gnosis_bridge.sh"
    logging:
      driver: "json-file"
      options:
        max-size: "50m"

  price_controller:
    image: price_controller
    build: ./price-controller/
    environment:
      APPLY_READ_URL: 'http://api/api/nft-mint-requests?status=SUCCESS'
      APPLY_WRITE_URL: 'http://api/apply-mint/'
      KINDS_URL: 'http://api/api/kinds'
      PRICE_CONTROLLER_USERNAME: 'PRICE_CONTROLLER_USERNAME'
      PRICE_CONTROLLER_PRIVATE_KEY: '${PRICE_CONTROLLER_PRIVATE_KEY}'
      PRICE_CONTROLLER_PASSWORD: '${PRICE_CONTROLLER_PASSWORD}'
    command: "npx ts-node src/main.ts"
  app:
    build:
      context: ./app
      dockerfile: Dockerfile
    image: app
    restart: always

volumes:
  static:
  media:
  db:
